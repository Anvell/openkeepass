package de.slackspace.openkeepass.stream;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;

import org.junit.Test;

import de.slackspace.openkeepass.util.ByteUtils;

public class HmacBlockInputStreamTest {

    @Test
    public void testHmacStream() throws IOException {
        // arrange
        byte[] input = ByteUtils.hexStringToByteArray(
                "5b713003e5112d9e729929aba17279a1bfd53216824e819a28fd0e697e2c6a8f300600000169e77f4fe1cefecdaea5fa34561281aa94a50f2e8dc21d05c50b9fbdf05c2b69c97771c4b9e474fcfd0ea1d8c81b4f2579b62b275d87f9e92366d9539226e02e559eb1c176efa9062817ad4d8bab805e429edeb8c6bd4f0927470ca161174211723c2a68dd9b0942b33ce2a4b7188b50ddf7c8996d3386f540877d115c2c2678c610cd9bc8ca2e70434103864e0ed941f491b49f08394c1b829db4f8b9b06c874ae4665b5d5d4b40f825d2eebbc03f6b50bfa36b20b0ae450962aa71b8734240f1153edf9ac06957bab29b01e1e7448df5ad39442685c90b4168568e8cf97da91ad21fa6af7bcdf60fbbf9ac2020b81d3154fa19d8dd505f0752bec3f16f1447f7efae7dfb2e049f1cd8ed2678138f7edbefddee4fe2dd06215cf414f7c4ab3ea577c12a73cb624c48a95e2a80f826005b752766e5a4801db722010746f980aa1a2ec49dcde65e431993ad3cabda2899bd94f56ee337e262e1adac5d188ea4354bd8d4b1571d7e78e02dc309ed140cac1d3c07f906c413cf164a041da4fa1fd51542c1364c97669a0307f53deef612ffcbe14f048446a81260eb975425b75747b471922b77bcea78a5084c6d69978afd72c84b346e31ccadf26d2483bd3e9fc5a7d0299f33ae9e8c3c279856101470baf004a185ffe84bfeb94f0a70a31df6c70b084b293b85576f3b41f6893de4869227e1f60054084e821e34ffc1057b48a582ed6982c75d1dde1d7c16ca7d9dbbf8e438a028a3bfbe5eda2614d0f8c88c14cd05c69b89b9be17d6f291adf0b30f32a682b20cf529a7c5393bef717f921d495b70f744c8e9075d9bb003b8f4a4d829376075a70d7e913b0d19cd0af943930a28383d0bb8744ff5b6d4ad862e4db08235bf96a697693c417d1313418e14473aa948fe684bb6aa7a5819b61c6649b7b721ef881c1e53cca2f5657b56b8175e0fbfb1665599c3bddae9c821e1e3d96ab7d1b908f5ed5ef22efaf49c1aa365deaa0efa8a6969fb2026a1cb0061a17a98aad031a3b14d565fbe62e9679ce459a60d607296143fb7405c7adbe1f09f9bc382f0c785fdf16c309075a948afd4b40bdcf01a1784f9c37399c77f32a7978c1c96c23932255f51e53325ecfd356c8443942fd7dc7c70c1bbfce170ed4326af7d8c0509992e6207437ab136f8d7ea573cf58aa26ff626f9b927ae337343c1ecd4490395c2408da9c96ff442c0f56202367a0dd2154b0793fefcea3283396b0ea7e1ad3d4a817703b3adf1c749d5acb19efe403265c76c3a1af38f138a46cead54949252acd31b9c1d542ad127315876f53f2bf51948f6b3bfab167508b54621ec7ae6d542773c12448e15f5a79f321898e439eb6cfa53851c9f415908d7c108f79b4412cfb97585bd0f2aeb3b708b2496c6610db41c719481e8b5faa1ecb36a111b6ff9f256ab8e3b4a0a141132ee4a2851e17636beb66f06c90d0cf20c7f91e49d9491a360a6f15d1d9209061fed8ded696a133f78043eaa28c9e4347330e5b2dd5884cb07460d47899aa9d5cf2199ce504635932a15469a7d24739f11c7c56ccc97cab1c14ad15ac30063fe0e74bcb98d120d9b2f05d0f812969726e7dea390ba59b6b616be6926581bdf2cfaee2f95707a5faa466e6cf4801a02abdf785c82e6acdebdc849abdd48f9ae65ff98a67be6a812ec5a5f3453a984936c8b420db908fcf0c08622ef7e640c1a632a3e4cbf6633cc9aeaac6ed4ea0490c70d2a639c67b87e5e6209f9b9bd8f457f3e4fcac2eee43d0a2d0d0d9386e2af2af512f2a2842394f6d8d7010ed256a780dcf061b8c131215a875054e158f641f82ee907768e46bce3355cdf80dadf079201261038eb2b00950d29f5bf546a602314ec78ba9e1dbf4e670a312e11a1035403781eb268fa2e4df0b41a7082da9e3d4bb0e363e5b7a6f816a4febcde999a2bf8b53e7fc9dbd20c4c1eb8ace3d385ddbbce9842b7f439f98d1da7224c3f0b440501359060f7e712813d93515d9dc37cae04199a58060e702904796c3d8d3264a37bfcd7ac784f594a148fd807fedebdcdc4657887cc22d8bbf07b3e69a662bd83722bdaa0ba40a4e68b8ed301ba45505066e47769b4c43fb48ccb1250d1aa12fc6d2f9939aa90381f80c65e1b5732cb0f7dbcc3bac08987817f305afe602732328261300a1201449f6595b8c20c5cfcccb8b1d35d4751558ddb36717defe1e371b2f484adb08ff91bd679c799a2f5ed33f441e61384");

        InputStream inputStream = new ByteArrayInputStream(input);

        byte[] key = ByteUtils.hexStringToByteArray(
                "46cd61eead3beaf0df1085e2e7b76e969d137e4b7510b86cf144b91129c108391e68100600b59a230e0f2e95ce34decdb0982ce515a822840ad17eadbc1e6220");

        // act
        HmacBlockInputStream hmacBlockInputStream = new HmacBlockInputStream(key, inputStream);

        // assert
        byte[] buf = new byte[128];
        hmacBlockInputStream.read(buf);
        assertThat(buf, is(ByteUtils.hexStringToByteArray(
                "0169e77f4fe1cefecdaea5fa34561281aa94a50f2e8dc21d05c50b9fbdf05c2b69c97771c4b9e474fcfd0ea1d8c81b4f2579b62b275d87f9e92366d9539226e02e559eb1c176efa9062817ad4d8bab805e429edeb8c6bd4f0927470ca161174211723c2a68dd9b0942b33ce2a4b7188b50ddf7c8996d3386f540877d115c2c26")));

        hmacBlockInputStream.read(buf);
        assertThat(buf, is(ByteUtils.hexStringToByteArray(
                "78c610cd9bc8ca2e70434103864e0ed941f491b49f08394c1b829db4f8b9b06c874ae4665b5d5d4b40f825d2eebbc03f6b50bfa36b20b0ae450962aa71b8734240f1153edf9ac06957bab29b01e1e7448df5ad39442685c90b4168568e8cf97da91ad21fa6af7bcdf60fbbf9ac2020b81d3154fa19d8dd505f0752bec3f16f14")));

        // cleanup
        hmacBlockInputStream.close();
    }
}
